[{"/Users/admin/Work/KIOS-Self-order-Food/src/index.js":"1","/Users/admin/Work/KIOS-Self-order-Food/src/Store.js":"2","/Users/admin/Work/KIOS-Self-order-Food/src/App.js":"3","/Users/admin/Work/KIOS-Self-order-Food/src/constants.js":"4","/Users/admin/Work/KIOS-Self-order-Food/src/screens/QueueScreen.js":"5","/Users/admin/Work/KIOS-Self-order-Food/src/screens/ChooseScreen.js":"6","/Users/admin/Work/KIOS-Self-order-Food/src/screens/HomeScreen.js":"7","/Users/admin/Work/KIOS-Self-order-Food/src/screens/OrderScreen.js":"8","/Users/admin/Work/KIOS-Self-order-Food/src/screens/PaymentScreen.js":"9","/Users/admin/Work/KIOS-Self-order-Food/src/screens/AdminScreen.js":"10","/Users/admin/Work/KIOS-Self-order-Food/src/screens/ReviewScreen.js":"11","/Users/admin/Work/KIOS-Self-order-Food/src/screens/SelectPaymentScreen.js":"12","/Users/admin/Work/KIOS-Self-order-Food/src/screens/CompleteOrderScreen.js":"13","/Users/admin/Work/KIOS-Self-order-Food/src/actions.js":"14","/Users/admin/Work/KIOS-Self-order-Food/src/styles.js":"15","/Users/admin/Work/KIOS-Self-order-Food/src/components/Logo.js":"16","/Users/admin/Work/SelfOrder-Food-App/src/index.js":"17","/Users/admin/Work/SelfOrder-Food-App/src/App.js":"18","/Users/admin/Work/SelfOrder-Food-App/src/Store.js":"19","/Users/admin/Work/SelfOrder-Food-App/src/constants.js":"20","/Users/admin/Work/SelfOrder-Food-App/src/screens/ChooseScreen.js":"21","/Users/admin/Work/SelfOrder-Food-App/src/screens/HomeScreen.js":"22","/Users/admin/Work/SelfOrder-Food-App/src/screens/QueueScreen.js":"23","/Users/admin/Work/SelfOrder-Food-App/src/screens/PaymentScreen.js":"24","/Users/admin/Work/SelfOrder-Food-App/src/screens/OrderScreen.js":"25","/Users/admin/Work/SelfOrder-Food-App/src/screens/ReviewScreen.js":"26","/Users/admin/Work/SelfOrder-Food-App/src/screens/SelectPaymentScreen.js":"27","/Users/admin/Work/SelfOrder-Food-App/src/screens/CompleteOrderScreen.js":"28","/Users/admin/Work/SelfOrder-Food-App/src/screens/AdminScreen.js":"29","/Users/admin/Work/SelfOrder-Food-App/src/styles.js":"30","/Users/admin/Work/SelfOrder-Food-App/src/actions.js":"31","/Users/admin/Work/SelfOrder-Food-App/src/components/Logo.js":"32"},{"size":257,"mtime":1646996311744,"results":"33","hashOfConfig":"34"},{"size":5284,"mtime":1646996311743,"results":"35","hashOfConfig":"34"},{"size":2367,"mtime":1646996311742,"results":"36","hashOfConfig":"34"},{"size":1202,"mtime":1646996311743,"results":"37","hashOfConfig":"34"},{"size":1797,"mtime":1646996311746,"results":"38","hashOfConfig":"34"},{"size":2465,"mtime":1651315114085,"results":"39","hashOfConfig":"34"},{"size":1223,"mtime":1651295670224,"results":"40","hashOfConfig":"34"},{"size":8451,"mtime":1651316150458,"results":"41","hashOfConfig":"34"},{"size":1006,"mtime":1651317298372,"results":"42","hashOfConfig":"34"},{"size":4163,"mtime":1646996311744,"results":"43","hashOfConfig":"34"},{"size":6289,"mtime":1651317508063,"results":"44","hashOfConfig":"34"},{"size":2418,"mtime":1651317130367,"results":"45","hashOfConfig":"34"},{"size":2096,"mtime":1651317426805,"results":"46","hashOfConfig":"34"},{"size":3179,"mtime":1646996311743,"results":"47","hashOfConfig":"34"},{"size":1979,"mtime":1651315849348,"results":"48","hashOfConfig":"34"},{"size":289,"mtime":1646996311743,"results":"49","hashOfConfig":"34"},{"size":257,"mtime":1651393132735,"results":"50","hashOfConfig":"51"},{"size":2367,"mtime":1651393132734,"results":"52","hashOfConfig":"51"},{"size":5284,"mtime":1651393132734,"results":"53","hashOfConfig":"51"},{"size":1202,"mtime":1651393132735,"results":"54","hashOfConfig":"51"},{"size":2465,"mtime":1651393132736,"results":"55","hashOfConfig":"51"},{"size":1223,"mtime":1651393132736,"results":"56","hashOfConfig":"51"},{"size":1797,"mtime":1651393132737,"results":"57","hashOfConfig":"51"},{"size":1006,"mtime":1651393132737,"results":"58","hashOfConfig":"51"},{"size":8483,"mtime":1651396197916,"results":"59","hashOfConfig":"51"},{"size":6295,"mtime":1651406221156,"results":"60","hashOfConfig":"51"},{"size":2418,"mtime":1651393132737,"results":"61","hashOfConfig":"51"},{"size":2096,"mtime":1651393132736,"results":"62","hashOfConfig":"51"},{"size":4163,"mtime":1651393132736,"results":"63","hashOfConfig":"51"},{"size":2259,"mtime":1651405983821,"results":"64","hashOfConfig":"51"},{"size":3179,"mtime":1651393132735,"results":"65","hashOfConfig":"51"},{"size":289,"mtime":1651393132735,"results":"66","hashOfConfig":"51"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12zcz6y",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rcigp4",{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/Work/KIOS-Self-order-Food/src/index.js",[],"/Users/admin/Work/KIOS-Self-order-Food/src/Store.js",["136"],"/Users/admin/Work/KIOS-Self-order-Food/src/App.js",[],"/Users/admin/Work/KIOS-Self-order-Food/src/constants.js",[],"/Users/admin/Work/KIOS-Self-order-Food/src/screens/QueueScreen.js",["137"],"/Users/admin/Work/KIOS-Self-order-Food/src/screens/ChooseScreen.js",[],"/Users/admin/Work/KIOS-Self-order-Food/src/screens/HomeScreen.js",[],"/Users/admin/Work/KIOS-Self-order-Food/src/screens/OrderScreen.js",["138"],"/Users/admin/Work/KIOS-Self-order-Food/src/screens/PaymentScreen.js",[],"/Users/admin/Work/KIOS-Self-order-Food/src/screens/AdminScreen.js",["139"],"/Users/admin/Work/KIOS-Self-order-Food/src/screens/ReviewScreen.js",[],"/Users/admin/Work/KIOS-Self-order-Food/src/screens/SelectPaymentScreen.js",[],"/Users/admin/Work/KIOS-Self-order-Food/src/screens/CompleteOrderScreen.js",["140"],"/Users/admin/Work/KIOS-Self-order-Food/src/actions.js",[],"/Users/admin/Work/KIOS-Self-order-Food/src/styles.js",[],"/Users/admin/Work/KIOS-Self-order-Food/src/components/Logo.js",[],"/Users/admin/Work/SelfOrder-Food-App/src/index.js",[],"/Users/admin/Work/SelfOrder-Food-App/src/App.js",[],"/Users/admin/Work/SelfOrder-Food-App/src/Store.js",["141"],"import React, { createContext, useReducer } from 'react';\nimport useReducerWithThunk from 'use-reducer-thunk';\nimport {\n  ORDER_ADD_ITEM,\n  ORDER_REMOVE_ITEM,\n  ORDER_CLEAR,\n  CATEGORY_LIST_FAIL,\n  CATEGORY_LIST_REQUEST,\n  CATEGORY_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  ORDER_SET_TYPE,\n  ORDER_SET_PAYMENT_TYPE,\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_REQUEST,\n  SCREEN_SET_WIDTH,\n  ORDER_QUEUE_LIST_REQUEST,\n  ORDER_QUEUE_LIST_SUCCESS,\n  ORDER_QUEUE_LIST_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n} from './constants';\n\nexport const Store = createContext();\n\nconst initialState = {\n  widthScreen: false,\n  orderList: { loading: true },\n  queueList: { loading: true },\n  categoryList: { loading: true },\n  productList: { loading: true },\n  order: {\n    orderItems: [],\n    orderType: 'Eat in',\n    paymentType: 'Pay here',\n    taxPrice: 0,\n    totalPrice: 0,\n    itemsCount: 0,\n  },\n  orderCreate: { loading: true },\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case SCREEN_SET_WIDTH:\n      return {\n        ...state,\n        widthScreen: true,\n      };\n    case ORDER_SET_TYPE:\n      return {\n        ...state,\n        order: { ...state.order, orderType: action.payload },\n      };\n    case ORDER_SET_PAYMENT_TYPE:\n      return {\n        ...state,\n        order: { ...state.order, paymentType: action.payload },\n      };\n    case CATEGORY_LIST_REQUEST:\n      return { ...state, categoryList: { loading: true } };\n    case CATEGORY_LIST_SUCCESS:\n      return {\n        ...state,\n        categoryList: { loading: false, categories: action.payload },\n      };\n    case CATEGORY_LIST_FAIL:\n      return {\n        ...state,\n        categoryList: { loading: false, error: action.payload },\n      };\n    case PRODUCT_LIST_REQUEST:\n      return { ...state, productList: { loading: true } };\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        ...state,\n        productList: { loading: false, products: action.payload },\n      };\n    case PRODUCT_LIST_FAIL:\n      return {\n        ...state,\n        productList: { loading: false, error: action.payload },\n      };\n    case ORDER_QUEUE_LIST_REQUEST:\n      return { ...state, queueList: { loading: true } };\n    case ORDER_QUEUE_LIST_SUCCESS:\n      return {\n        ...state,\n        queueList: { loading: false, queue: action.payload },\n      };\n    case ORDER_QUEUE_LIST_FAIL:\n      return {\n        ...state,\n        queueList: { loading: false, error: action.payload },\n      };\n    case ORDER_LIST_REQUEST:\n      return { ...state, orderList: { loading: true } };\n    case ORDER_LIST_SUCCESS:\n      return {\n        ...state,\n        orderList: { loading: false, orders: action.payload },\n      };\n    case ORDER_LIST_FAIL:\n      return {\n        ...state,\n        orderList: { loading: false, error: action.payload },\n      };\n    case ORDER_CREATE_REQUEST:\n      return { ...state, orderCreate: { loading: true } };\n    case ORDER_CREATE_SUCCESS:\n      return {\n        ...state,\n        orderCreate: { loading: false, newOrder: action.payload },\n      };\n    case ORDER_CREATE_FAIL:\n      return {\n        ...state,\n        orderCreate: { loading: false, error: action.payload },\n      };\n    case ORDER_ADD_ITEM: {\n      const item = action.payload;\n      const existItem = state.order.orderItems.find(\n        (x) => x.name === item.name\n      );\n      const orderItems = existItem\n        ? state.order.orderItems.map((x) =>\n            x.name === existItem.name ? item : x\n          )\n        : [...state.order.orderItems, item];\n\n      const itemsCount = orderItems.reduce((a, c) => a + c.quantity, 0);\n      const itemsPrice = orderItems.reduce(\n        (a, c) => a + c.quantity * c.price,\n        0\n      );\n      const taxPrice = Math.round(0.15 * itemsPrice * 100) / 100;\n      const totalPrice = Math.round((itemsPrice + taxPrice) * 100) / 100;\n      return {\n        ...state,\n        order: {\n          ...state.order,\n          orderItems,\n          taxPrice,\n          totalPrice,\n          itemsCount,\n        },\n      };\n    }\n    case ORDER_REMOVE_ITEM:\n      const orderItems = state.order.orderItems.filter(\n        (x) => x.name !== action.payload.name\n      );\n      const itemsCount = orderItems.reduce((a, c) => a + c.quantity, 0);\n      const itemsPrice = orderItems.reduce(\n        (a, c) => a + c.quantity * c.price,\n        0\n      );\n      const taxPrice = Math.round(0.15 * itemsPrice * 100) / 100;\n      const totalPrice = Math.round((itemsPrice + taxPrice) * 100) / 100;\n      return {\n        ...state,\n        order: {\n          ...state.order,\n          orderItems,\n          taxPrice,\n          totalPrice,\n          itemsCount,\n        },\n      };\n\n    case ORDER_CLEAR:\n      return {\n        ...state,\n        order: {\n          orderItems: [],\n          taxPrice: 0,\n          totalPrice: 0,\n          itemsCount: 0,\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  //const [state, dispatch] = useReducerWithThunk(reducer, initialState, 'example');\n\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n","/Users/admin/Work/SelfOrder-Food-App/src/constants.js",[],"/Users/admin/Work/SelfOrder-Food-App/src/screens/ChooseScreen.js",[],"/Users/admin/Work/SelfOrder-Food-App/src/screens/HomeScreen.js",[],"/Users/admin/Work/SelfOrder-Food-App/src/screens/QueueScreen.js",["142"],"import React, { useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport { listQueue } from '../actions';\nimport {\n  Box,\n  CircularProgress,\n  Grid,\n  List,\n  ListItem,\n  Paper,\n} from '@material-ui/core';\nimport { useStyles } from '../styles';\nimport { Alert } from '@material-ui/lab';\nimport { Helmet } from 'react-helmet';\nexport default function QueueScreen(props) {\n  const styles = useStyles();\n\n  const { state, dispatch } = useContext(Store);\n  const { queue, loading, error } = state.queueList;\n\n  useEffect(() => {\n    listQueue(dispatch);\n  }, []);\n\n  return (\n    <Box className={[styles.root]}>\n      <Helmet>\n        <title>Queue</title>\n      </Helmet>\n      <Box className={[styles.main]}>\n        {loading ? (\n          <CircularProgress />\n        ) : error ? (\n          <Alert severity=\"error\">{error}</Alert>\n        ) : (\n          <Grid container spacing={2}>\n            <Grid item md={6}>\n              <Paper>\n                <h1 className={styles.processing}>In Progress</h1>\n                <List>\n                  {queue.inProgressOrders.map((order) => (\n                    <ListItem key={order.number}>\n                      <h1>{order.number}</h1>\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </Grid>\n            <Grid item md={6}>\n              <Paper>\n                <h1 className={styles.ready}>Now Serving </h1>\n                <List>\n                  {queue.servingOrders.map((order) => (\n                    <ListItem key={order.number}>\n                      <h1>{order.number}</h1>\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </Grid>\n          </Grid>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","/Users/admin/Work/SelfOrder-Food-App/src/screens/PaymentScreen.js",[],"/Users/admin/Work/SelfOrder-Food-App/src/screens/OrderScreen.js",["143"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Store } from '../Store';\nimport {\n  addToOrder,\n  clearOrder,\n  listCategories,\n  listProducts,\n  removeFromOrder,\n} from '../actions';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  CircularProgress,\n  Dialog,\n  DialogTitle,\n  Grid,\n  List,\n  ListItem,\n  Slide,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { Alert } from '@material-ui/lab';\nimport { useStyles } from '../styles';\nimport Logo from '../components/Logo';\nexport default function OrderScreen(props) {\n  const styles = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const { categories, loading, error } = state.categoryList;\n  const {\n    products,\n    loading: loadingProducts,\n    error: errorProducts,\n  } = state.productList;\n  const {\n    orderItems,\n    itemsCount,\n    totalPrice,\n    taxPrice,\n    orderType,\n  } = state.order;\n\n  const [categoryName, setCategoryName] = useState('');\n\n  const [quantity, setQuantity] = useState(1);\n  const [isOpen, setIsOpen] = useState(false);\n  const [product, setProduct] = useState({});\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n  const productClickHandler = (p) => {\n    setProduct(p);\n    setIsOpen(true);\n  };\n  const addToOrderHandler = () => {\n    addToOrder(dispatch, { ...product, quantity });\n    setIsOpen(false);\n  };\n  const cancelOrRemoveFromOrder = () => {\n    removeFromOrder(dispatch, product);\n    setIsOpen(false);\n  };\n  const previewOrderHandler = () => {\n    props.history.push(`/review`);\n  };\n  useEffect(() => {\n    if (!categories) {\n      listCategories(dispatch);\n    } else {\n      listProducts(dispatch, categoryName);\n    }\n  }, [categories, categoryName]);\n\n  const categoryClickHandler = (name) => {\n    setCategoryName(name);\n    listProducts(dispatch, categoryName);\n  };\n\n  return (\n    <Box className={styles.root}>\n      <Box className={styles.main}>\n        <Dialog\n          onClose={closeHandler}\n          aria-labelledby=\"max-width-dialog-title\"\n          open={isOpen}\n          fullWidth={true}\n          maxWidth=\"sm\"\n        >\n          <DialogTitle className={styles.center}>\n            Thêm {product.name} vào đơn hàng\n          </DialogTitle>\n          <Box className={[styles.row, styles.center]}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={quantity === 1}\n              onClick={(e) => quantity > 1 && setQuantity(quantity - 1)}\n            >\n              <RemoveIcon />\n            </Button>\n            <TextField\n              inputProps={{ className: styles.largeInput }}\n              InputProps={{\n                bar: true,\n                inputProps: {\n                  className: styles.largeInput,\n                },\n              }}\n              className={styles.largeNumber}\n              type=\"number\"\n              variant=\"filled\"\n              min={1}\n              value={quantity}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={(e) => setQuantity(quantity + 1)}\n            >\n              <AddIcon />\n            </Button>\n          </Box>\n          <Box className={[styles.row, styles.around]}>\n            <Button\n              onClick={cancelOrRemoveFromOrder}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={styles.largeButton}\n            >\n              {orderItems.find((x) => x.name === product.name)\n                ? 'Xoá Khỏi Đơn Hàng'\n                : 'Huỷ'}\n            </Button>\n\n            <Button\n              onClick={addToOrderHandler}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={styles.largeButton}\n            >\n              Thêm Món\n            </Button>\n          </Box>\n        </Dialog>\n\n        <Grid container>\n          <Grid item md={2}>\n            <List>\n              {loading ? (\n                <CircularProgress />\n              ) : error ? (\n                <Alert severity=\"error\">{error}</Alert>\n              ) : (\n                <>\n                  <ListItem button onClick={() => categoryClickHandler('')}>\n                    <Logo></Logo>\n                  </ListItem>\n                  {categories.map((category) => (\n                    <ListItem\n                      key={category.name}\n                      button\n                      onClick={() => categoryClickHandler(category.name)}\n                    >\n                      <Avatar alt={category.name} src={category.image} />\n                    </ListItem>\n                  ))}\n                </>\n              )}\n            </List>\n          </Grid>\n          <Grid item md={10}>\n            <Typography\n              gutterBottom\n              className={styles.title}\n              variant=\"h2\"\n              component=\"h2\"\n            >\n              {categoryName || 'Thực Đơn'}\n            </Typography>\n\n            <Grid container spacing={1}>\n              {loadingProducts ? (\n                <CircularProgress />\n              ) : errorProducts ? (\n                <Alert severity=\"error\">{errorProducts}</Alert>\n              ) : (\n                products.map((product) => (\n                  <Slide key={product.name} direction=\"up\" in={true}>\n                    <Grid item md={6}>\n                      <Card\n                        className={styles.card}\n                        onClick={() => productClickHandler(product)}\n                      >\n                        <CardActionArea className={styles.cardsContent}>\n                          <CardMedia\n                            component=\"img\"\n                            alt={product.name}\n                            image={product.image}\n                            className={styles.media}\n                          />\n                          <CardContent>\n                            <Typography\n                              gutterBottom\n                              variant=\"body2\"\n                              color=\"textPrimary\"\n                              component=\"p\"\n                              className={styles.name}\n                            >\n                              {product.name}\n                            </Typography>\n                            <Box className={styles.cardFooter}>\n                              <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                component=\"p\"\n                              >\n                              Khuyến mãi: {product.khuyenmai}\n                              </Typography>\n                              <Typography\n                                variant=\"body2\"\n                                color=\"textPrimary\"\n                                component=\"p\"\n                              >\n                                {product.price} VNĐ\n                              </Typography>\n                            </Box>\n                          </CardContent>\n                        </CardActionArea>\n                      </Card>\n                    </Grid>\n                  </Slide>\n                ))\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n      <Box>\n        <Box>\n          <Box className={[styles.bordered, styles.space]}>\n            Đơn hàng của tôi - {orderType} | Tax: {taxPrice}VNĐ | Tổng cộng: {totalPrice}VNĐ |\n            Số Lượng: {itemsCount}\n          </Box>\n          <Box className={[styles.row, styles.around]}>\n            <Button\n              onClick={() => {\n                clearOrder(dispatch);\n                props.history.push(`/`);\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n              className={styles.largeButton}\n            >\n              Huỷ\n            </Button>\n\n            <Button\n              onClick={previewOrderHandler}\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={orderItems.length === 0}\n              className={styles.largeButton}\n            >\n              Thanh Toán\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","/Users/admin/Work/SelfOrder-Food-App/src/screens/ReviewScreen.js",[],"/Users/admin/Work/SelfOrder-Food-App/src/screens/SelectPaymentScreen.js",[],"/Users/admin/Work/SelfOrder-Food-App/src/screens/CompleteOrderScreen.js",["144"],"import React, { useContext, useEffect } from 'react';\nimport { Box, Button, CircularProgress, Typography } from '@material-ui/core';\nimport { useStyles } from '../styles';\nimport Logo from '../components/Logo';\nimport { Store } from '../Store';\nimport { Alert } from '@material-ui/lab';\nimport { createOrder } from '../actions';\nexport default function CompleteOrderScreen(props) {\n  const styles = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const { order } = state;\n  const { loading, error, newOrder } = state.orderCreate;\n\n  useEffect(() => {\n    if (order.orderItems.length > 0) {\n      createOrder(dispatch, order);\n    }\n  }, [order]);\n\n  return (\n    <Box className={[styles.root, styles.navy]}>\n      <Box className={[styles.main, styles.center]}>\n        <Box>\n          <Logo large></Logo>\n          {loading ? (\n            <CircularProgress></CircularProgress>\n          ) : error ? (\n            <Alert severity=\"error\">{error}</Alert>\n          ) : (\n            <>\n              <Typography\n                gutterBottom\n                className={styles.title}\n                variant=\"h3\"\n                component=\"h3\"\n              >\n                Đã Hoàn Tất Đặt Đơn\n              </Typography>\n              <Typography\n                gutterBottom\n                className={styles.title}\n                variant=\"h1\"\n                component=\"h1\"\n              >\n                Thank you!\n              </Typography>\n              <Typography\n                gutterBottom\n                className={styles.title}\n                variant=\"h3\"\n                component=\"h3\"\n              >\n                Số Thứ Tự Của Bạn Là: {newOrder.number}\n              </Typography>\n            </>\n          )}\n        </Box>\n      </Box>\n      <Box className={[styles.center, styles.space]}>\n        <Button\n          onClick={() => props.history.push('/')}\n          variant=\"contained\"\n          color=\"primary\"\n          className={styles.largeButton}\n        >\n          Trang chủ\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","/Users/admin/Work/SelfOrder-Food-App/src/screens/AdminScreen.js",["145"],"import React, { useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport { listOrders } from '../actions';\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport { useStyles } from '../styles';\nimport { Alert } from '@material-ui/lab';\nimport Axios from 'axios';\nimport { Helmet } from 'react-helmet';\nexport default function AdminScreen(props) {\n  const styles = useStyles();\n\n  const { state, dispatch } = useContext(Store);\n  const { orders, loading, error } = state.orderList;\n  const setOrderStateHandler = async (order, action) => {\n    try {\n      await Axios.put('/api/orders/' + order._id, {\n        action: action,\n      });\n      listOrders(dispatch);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  useEffect(() => {\n    listOrders(dispatch);\n  }, []);\n\n  return (\n    <Box className={[styles.root]}>\n      <Helmet>\n        <title>Admin Orders</title>\n      </Helmet>\n\n      <Box className={[styles.main]}>\n        {loading ? (\n          <CircularProgress />\n        ) : error ? (\n          <Alert severity=\"error\">{error}</Alert>\n        ) : (\n          <TableContainer component={Paper}>\n            <Table aria-label=\"Orders\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Order Number</TableCell>\n                  <TableCell align=\"right\">Price&nbsp;($)</TableCell>\n                  <TableCell align=\"right\">Count</TableCell>\n                  <TableCell align=\"right\">Items</TableCell>\n                  <TableCell align=\"right\">Type</TableCell>\n                  <TableCell align=\"right\">Payment</TableCell>\n                  <TableCell align=\"right\">State</TableCell>\n                  <TableCell align=\"right\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {orders.map((order) => (\n                  <TableRow key={order.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {order.number}\n                    </TableCell>\n                    <TableCell align=\"right\">{order.totalPrice}</TableCell>\n                    <TableCell align=\"right\">\n                      {order.orderItems.length}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {order.orderItems.map((item) => (\n                        <Box>\n                          {item.name} x {item.quantity}\n                        </Box>\n                      ))}\n                    </TableCell>\n                    <TableCell align=\"right\">{order.orderType}</TableCell>\n                    <TableCell align=\"right\">{order.paymentType}</TableCell>\n                    <TableCell align=\"right\">\n                      {order.inProgress\n                        ? 'In Progress'\n                        : order.isReady\n                        ? 'Ready'\n                        : order.isDelivered\n                        ? 'Delivered'\n                        : 'Unknown'}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => setOrderStateHandler(order, 'ready')}\n                        color=\"secondary\"\n                      >\n                        Ready\n                      </Button>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => setOrderStateHandler(order, 'cancel')}\n                      >\n                        Cancel\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => setOrderStateHandler(order, 'deliver')}\n                      >\n                        Deliver\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","/Users/admin/Work/SelfOrder-Food-App/src/styles.js",[],"/Users/admin/Work/SelfOrder-Food-App/src/actions.js",[],"/Users/admin/Work/SelfOrder-Food-App/src/components/Logo.js",[],{"ruleId":"146","severity":1,"message":"147","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":27},{"ruleId":"150","severity":1,"message":"151","line":23,"column":6,"nodeType":"152","endLine":23,"endColumn":8,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"151","line":79,"column":6,"nodeType":"152","endLine":79,"endColumn":32,"suggestions":"154"},{"ruleId":"150","severity":1,"message":"151","line":38,"column":6,"nodeType":"152","endLine":38,"endColumn":8,"suggestions":"155"},{"ruleId":"150","severity":1,"message":"151","line":18,"column":6,"nodeType":"152","endLine":18,"endColumn":13,"suggestions":"156"},{"ruleId":"146","severity":1,"message":"147","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":27},{"ruleId":"150","severity":1,"message":"151","line":23,"column":6,"nodeType":"152","endLine":23,"endColumn":8,"suggestions":"157"},{"ruleId":"150","severity":1,"message":"151","line":79,"column":6,"nodeType":"152","endLine":79,"endColumn":32,"suggestions":"158"},{"ruleId":"150","severity":1,"message":"151","line":18,"column":6,"nodeType":"152","endLine":18,"endColumn":13,"suggestions":"159"},{"ruleId":"150","severity":1,"message":"151","line":38,"column":6,"nodeType":"152","endLine":38,"endColumn":8,"suggestions":"160"},"no-unused-vars","'useReducerWithThunk' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["161"],["162"],["163"],["164"],["165"],["166"],["167"],["168"],{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"169","fix":"173"},{"desc":"174","fix":"175"},{"desc":"169","fix":"176"},{"desc":"171","fix":"177"},{"desc":"174","fix":"178"},{"desc":"169","fix":"179"},"Update the dependencies array to be: [dispatch]",{"range":"180","text":"181"},"Update the dependencies array to be: [categories, categoryName, dispatch]",{"range":"182","text":"183"},{"range":"184","text":"181"},"Update the dependencies array to be: [dispatch, order]",{"range":"185","text":"186"},{"range":"187","text":"181"},{"range":"188","text":"183"},{"range":"189","text":"186"},{"range":"190","text":"181"},[578,580],"[dispatch]",[1835,1861],"[categories, categoryName, dispatch]",[907,909],[653,660],"[dispatch, order]",[578,580],[1835,1861],[653,660],[907,909]]